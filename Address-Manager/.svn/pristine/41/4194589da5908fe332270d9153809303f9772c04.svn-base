<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tscloud.address.server.mapper.DistrictMapper">
    <!--街道数据-->
    <sql id="districtColumns">
      a.district_id     as addrId,
      a.name            as name,
      a.x_coordinate    as x,
      a.y_coordinate    as y,
      'district'        as dataType
    </sql>
    <select id="getDistrict" resultType="DistrictEntity" parameterType="java.util.Map">
        SELECT <include refid="districtColumns"/> FROM gdb_district a
        <where>
          <if test="addrId!=null">
              a.county_id=#{addrId}
          </if>
        </where>
    </select>


    <!--社区居委会-->
    <sql id="villageColumns">
        a.village_id     as addrId,
        a.name           as name,
        a.x_coordinate   as x,
        a.y_coordinate   as y,
        'village'       as dataType
    </sql>
    <select id="getVillage" resultType="DistrictEntity" parameterType="java.util.Map">
        SELECT <include refid="villageColumns"/> FROM gdb_village a
        <where>
            <if test="addrId!=null">
             a.district_id=#{addrId}
            </if>
        </where>
    </select>

    <!--道路数据-->
    <sql id="roadColumns">
            p.id       as addrId,
            p.address  as name ,
            p.x        as x,
            p.y        as y,

    </sql>
    <select id="getRoad" resultType="DistrictEntity" parameterType="java.util.Map">
        SELECT <include refid="roadColumns"/>  'road' as dataType FROM (
          SELECT p.road_id AS id,p.village_id, p.adcode, p.poi_type, p.x_coordinate AS x, p.y_coordinate AS y, p.name, p.full_name AS fullname, ((p.name)::text) AS address FROM gdb_road p
          UNION ALL
          SELECT p.road_branch_id AS id,p.village_id,p.adcode, p.poi_type, p.x_coordinate AS x, p.y_coordinate AS y, p.name, p.full_name AS fullname,
                ((( CASE WHEN (p.road_id IS NULL) THEN ''::character varying ELSE ( SELECT g.name FROM gdb_road g WHERE ((p.road_id IS NOT NULL) AND (g.road_id = p.road_id))) END)::text) || (p.name)::text) AS address FROM gdb_road_branch p ) p
        <where>
            <if test="addrId!=null">
                p.village_id=#{addrId}
            </if>
        </where>
    </select>
    <select id="getStreetno" resultType="DistrictEntity" parameterType="java.util.Map">
      SELECT <include refid="roadColumns"/> 'streetno' as dataType FROM(
        SELECT streetno_sub_id AS id,p.road_id,p.road_branch_id, p.adcode, p.poi_type, p.x_coordinate AS x, p.y_coordinate AS y, p.name, p.full_name AS fullname, (((CASE WHEN (p.streetno_id IS NULL) THEN ''::character varying ELSE ( SELECT i.name FROM gdb_streetno i WHERE ((p.streetno_id IS NOT NULL) AND (i.streetno_id = p.streetno_id))) END)::text) || (p.name)::text) AS address FROM gdb_streetno_sub p
         UNION ALL
        SELECT p.streetno_id AS id,p.road_id,p.road_branch_id, p.adcode, p.poi_type, p.x_coordinate AS x, p.y_coordinate AS y, p.name, p.full_name AS fullname, ( (p.name)::text) AS address FROM gdb_streetno p)p
        <where>
            <if  test="addrId!=null">
                p.road_id=#{addrId} or p.road_branch_id=#{addrId}
            </if>
        </where>
    </select>


    <!--小区数据 根据社区居委会查询-->
    <sql id="communityColumns">
        a.community_id  as addrId,
        a.name          as name,
        a.x_coordinate  as x,
        a.y_coordinate  as y,
        'community'     as dataType
    </sql>
    <select id="getCommunity" resultType="DistrictEntity" parameterType="java.util.Map">
        SELECT <include refid="communityColumns"/> FROM gdb_community a
        <where>
            <if test="addrId!=null">
                a.village_id=#{addrId}
            </if>
        </where>
    </select>

    <!--标志性建筑物 TODO 预留-->
    <sql id="landmarkColumns">
        a.landmark_id   as addrId,
        a.name          as name,
        a.x_coordinate  as x,
        a.y_coordinate  as y,
        'landmark'      as dataType
    </sql>
    <select id="getLandmark" resultType="DistrictEntity" parameterType="java.util.Map">
      SELECT  <include refid="landmarkColumns"/> FROM  gdb_landmark a
        <where>
            <if test="addrId!=null">
                a.road_id=#{addrId} or a.road_branch_id=#{addrId} or a.streetno_id=#{addrId} or a.streetno_sub_id=#{addrId}
            </if>
        </where>
    </select>
    
    <!--获取楼栋数据 TODO 目前根据 小区查询楼栋-->
    <!--楼栋-->
    <sql id="buildingColumns">
       p.building_id  as addrId,
       p.x_coordinate as x,
       p.y_coordinate as y,
       'buildings'    as dataType
    </sql>
    <!--门牌号-->
    <sql id="unitColumns">
        p.buildingsunit_id  as addrId,
        p.x_coordinate      as x,
        p.y_coordinate      as y,
        'unit'              as dataType
    </sql>
    <!--楼层-->
    <sql id="floorColumns">
        p.buildingsfloor_id   as addrId,
        p.x_coordinate        as x,
        p.y_coordinate        as y,
        'floor'               as dataType
    </sql>
    <!--房号查询-->
    <sql id="roomColumns">
        p.buildingsroom_id    as addrId,
        p.x_coordinate         as x,
        p.y_coordinate         as y,
        'room'                 as dataType
    </sql>
    <select id="getBuilding" resultType="DistrictEntity" parameterType="java.util.Map">
      (SELECT <include refid="roomColumns"/>,(((((CASE WHEN (p.building_id IS NULL) THEN ''::character varying ELSE ( SELECT k.name FROM gdb_buildings k WHERE ((p.building_id IS NOT NULL) AND (k.building_id = p.building_id))) END)::text) || ( CASE WHEN (p.buildingsunit_id IS NULL) THEN ''::character varying ELSE ( SELECT l.name FROM gdb_buildingsunit l WHERE ((p.buildingsunit_id IS NOT NULL) AND (l.buildingsunit_id = p.buildingsunit_id))) END)::text) || ( CASE WHEN (p.buildingsfloor_id IS NULL) THEN ''::character varying ELSE ( SELECT m.name FROM gdb_buildingsfloor m WHERE ((p.buildingsfloor_id IS NOT NULL) AND (m.buildingsfloor_id = p.buildingsfloor_id))) END)::text) || (p.name)::text) AS name FROM gdb_buildingsroom p
      <where>
          <if test="addrId!=null">
              p.community_id=#{addrId}
          </if>
      </where>
      )UNION all
      (SELECT <include refid="floorColumns"/>, ((((CASE WHEN (p.building_id IS NULL) THEN ''::character varying ELSE ( SELECT k.name FROM gdb_buildings k WHERE ((p.building_id IS NOT NULL) AND (k.building_id = p.building_id))) END)::text) || ( CASE WHEN (p.buildingsunit_id IS NULL) THEN ''::character varying ELSE ( SELECT l.name FROM gdb_buildingsunit l WHERE ((p.buildingsunit_id IS NOT NULL) AND (l.buildingsunit_id = p.buildingsunit_id))) END)::text) || (p.name)::text) AS name FROM gdb_buildingsfloor p
       <where>
           <if test="addrId!=null">
               p.community_id=#{addrId}
           </if>
       </where>
       )UNION all
      (SELECT <include refid="unitColumns"/>,((( CASE WHEN (p.building_id IS NULL) THEN ''::character varying ELSE ( SELECT k.name FROM gdb_buildings k WHERE ((p.building_id IS NOT NULL) AND (k.building_id = p.building_id))) END)::text) || (p.name)::text) AS name FROM gdb_buildingsunit p
        <where>
            <if test="addrId!=null">
                p.community_id=#{addrId}
            </if>
        </where>
      )UNION all
      (SELECT  <include refid="buildingColumns"/>, ((p.name)::text) AS name FROM gdb_buildings p
        <where>
            <if test="addrId!=null">
                p.community_id=#{addrId}
            </if>
        </where>
      )
    </select>


</mapper>